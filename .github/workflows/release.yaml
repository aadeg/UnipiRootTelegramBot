name: Release

on:
  push:
    branches:
      - master

jobs:
  testing:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Install dependecies
        run: npm ci
      - name: Running Tests
        run: npm run coverage
      - name: Test coverage
        uses: codecov/codecov-action@v1
    
  gcloud-deploy:
    runs-on: ubuntu-20.04
    environment: "Google Cloud Deploy"
    needs: testing
    concurrency: gcloud-deployment
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3

      - id: auth
        name: Authentication
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "projects/1040901604659/locations/global/workloadIdentityPools/github-production-poll/providers/github-provider"
          service_account: "github-deployment@unipitelegrambot.iam.gserviceaccount.com"
      
      - id: deploy
        name: Deploy
        uses: google-github-actions/deploy-cloud-functions@v1
        with:
          name: botHook
          runtime: nodejs16
          region: ${{ secrets.PROJECT_REGION }}
          env_vars: BOT_TOKEN=${{ secrets.BOT_TOKEN }},REGION=${{ secrets.PROJECT_REGION }},PROJECT_ID=${{ secrets.PROJECT_ID }}

      - name: Setting up Telegram Webhook
        run: ./scripts/setup-webhook.sh
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          URL: ${{ steps.deploy.outputs.url }}


  release-new-version:
    runs-on: ubuntu-20.04
    environment: "Telegram Messaging"
    needs: gcloud-deploy
    concurrency: release
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Install dependecies
        run: npm ci
      
      - id: auth
        name: Authentication
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "projects/1040901604659/locations/global/workloadIdentityPools/github-production-poll/providers/github-provider"
          service_account: "github-deployment@unipitelegrambot.iam.gserviceaccount.com"
          create_credentials_file: true
          export_environment_variables: true

      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PROJECT_ID: ${{ secrets.PROJECT_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          TELEGRAM_USER_ID: ${{ secrets.TELEGRAM_USER_ID }}
        run: npx semantic-release
